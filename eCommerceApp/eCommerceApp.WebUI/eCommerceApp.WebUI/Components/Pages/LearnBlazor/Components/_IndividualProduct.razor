@rendermode InteractiveServer

<div class="bg-light border p-2 col-6" @onclick="(args)=>LastSelectedProduct(args, Product.Name)">
    <h4 class="text-secondary"> Product - @Product.Id </h4>
    <input type="checkbox" @onchange="FavouriteUpdated"/> Add to Favorite <br /> <br />

    <p> Name - @Product.Name </p>
    <p> Show Properties: <input type="checkbox" @bind-value="@Product.IsActive" checked="@(Product.IsActive?"checked":null)" /> </p>
    @if (Product.IsActive)
    {
        @foreach (var property in Product.ProductProperties)
        {
            <p> @property.Key - @property.Value </p>
        }
    } <br />
    <_EditDeleteButton IsActive="@Product.IsActive">
    </_EditDeleteButton>
</div>

@code {
    [Parameter]
    public Demo_Product Product { get; set; }

    [Parameter]
    public EventCallback<bool> OnFavouriteSelection { get; set; }

    [Parameter]
    public EventCallback<string> OnLastSelectedProductChange { get; set; }

    private async Task FavouriteUpdated(ChangeEventArgs e)
    {
        await OnFavouriteSelection.InvokeAsync((bool)e.Value);
    }

    private async Task LastSelectedProduct(MouseEventArgs e, string name)
    {
        await OnLastSelectedProductChange.InvokeAsync(name);
    }
}
